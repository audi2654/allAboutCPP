/*Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/

#include <iostream>

class fib{
    int f, j, array[100], earray[100];   //stack smashing error given her if array is not given size, if size is given there's no error

    public:
        fib(int &num);
        void disp();
        void even_disp();
};

fib::fib(int& num){
    std::cout << "This is a no arg constr" << std::endl;
    f = num;
    array[f];
    j = 0;

    std::cout << "Cout from inside of constr : ";
    for (size_t i = 0; i < num; i++){
    this->array[i] = i;
    std::cout << this->array[i] << " ";
    }
    std::cout << std::endl;
}

void fib::disp(){
    std::cout << "Fibo no are : ";
    for (size_t i = 0; i < f; i++) {
        if(i >= 2){
            this->array[i] = this->array[i-1] + this->array[i-2];
            std::cout << this->array[i] << " ";
            earray[j] = array[i];
            j++;
        } else {
            std::cout << this->array[i] << " ";
            earray[j] = array[i];
            j++;
        }
    }

    std::cout << std::endl;
}

void fib::even_disp(){
    int sum(0);
    std::cout << "Even no are : ";
    for (size_t i = 0; i < f; i++) {
        if(earray[i] % 2 == 0){
        std::cout << this->earray[i] << " ";

        sum = sum + earray[i];
        }

    }

    std::cout << std::endl;
    std::cout << "Sum of even no is : " << sum << std::endl;


}

int main(){ 
    int num;

    std::cout << "Enter number : ";
    std::cin >> num;

    fib obj1(num);

    obj1.disp();

    obj1.even_disp();


    return 0;
}